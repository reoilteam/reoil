{"version":3,"file":"index.js","sources":["../src/utils/flex.ts","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/components/Inspect.tsx","../src/components/Box.tsx","../src/components/Image.tsx","../src/components/Avatar.tsx","../src/components/Copy.tsx","../src/components/Meta.tsx"],"sourcesContent":["import * as CSS from 'csstype'\n\ntype Position = {\n  center?: boolean\n  left?: boolean\n  right?: boolean\n  top?: boolean\n  bottom?: boolean\n  row?: boolean\n  rowBetween?: boolean\n  colBetween?: boolean\n  rowAround?: boolean\n  colAround?: boolean\n  rowEvenly?: boolean\n  colEvenly?: boolean\n}\n\ntype FlexDirection = CSS.FlexDirectionProperty\n\nexport type JustifyContentProps = CSS.JustifyContentProperty\nexport type AlignItemsProps = CSS.AlignItemsProperty\n\ninterface JustifyContentFN {\n  (params: {\n    childrenPosition: Position\n    flexDirection: FlexDirection\n    alignX?: JustifyContentProps | AlignItemsProps\n    alignY?: JustifyContentProps | AlignItemsProps\n    stretch?: boolean\n  }): JustifyContentProps\n}\ninterface AlignItemsFN {\n  (parmas: {\n    childrenPosition: Position\n    flexDirection: FlexDirection\n    alignX?: JustifyContentProps | AlignItemsProps\n    alignY?: JustifyContentProps | AlignItemsProps\n    stretch?: boolean\n  }): AlignItemsProps\n}\n\n// Get justifyContent property based on Position, Direction jsx props\nexport const getComputedJustifyContent: JustifyContentFN = ({\n  childrenPosition,\n  flexDirection: direction,\n  alignX,\n  alignY,\n  stretch\n}) => {\n  if (direction === 'row') {\n    if(alignX) return alignX\n\n    return childrenPosition.left\n      ? 'flex-start'\n      : childrenPosition.right\n      ? 'flex-end'\n      : childrenPosition.rowBetween\n      ? 'space-between'\n      : childrenPosition.rowAround\n      ? 'space-around'\n      : childrenPosition.rowEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  if (direction === 'column') {\n    if(alignY) return alignY\n\n    return childrenPosition.top\n      ? 'flex-start'\n      : childrenPosition.bottom\n      ? 'flex-end'\n      : childrenPosition.colBetween\n      ? 'space-between'\n      : childrenPosition.colAround\n      ? 'space-around'\n      : childrenPosition.colEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  return 'flex-start'\n}\n// Get alignItemsjustifyContent property based on Position, Direction jsx props\nexport const getComputedAlignItems: AlignItemsFN = ({\n  childrenPosition,\n  flexDirection: direction,\n  alignX,\n  alignY,\n  stretch\n}) => {\n  if (direction === 'column') {\n    if(stretch) return 'stretch'\n    if(alignX) return alignX\n\n    return childrenPosition.left\n      ? 'flex-start'\n      : childrenPosition.right\n      ? 'flex-end'\n      : childrenPosition.rowBetween\n      ? 'space-between'\n      : childrenPosition.rowAround\n      ? 'space-around'\n      : childrenPosition.rowEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  if (direction === 'row') {\n    if(stretch) return 'stretch'\n    if(alignY) return alignY\n\n    return childrenPosition.top\n      ? 'flex-start'\n      : childrenPosition.bottom\n      ? 'flex-end'\n      : childrenPosition.colBetween\n      ? 'space-between'\n      : childrenPosition.colAround\n      ? 'space-around'\n      : childrenPosition.colEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  return 'flex-start'\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import React, { useRef, useEffect, useState } from 'react'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nconst Inspect: React.FC = () => {\n  const ref = useRef<HTMLDivElement>(null)\n  const [info, setInfo] = useState({\n    width: 0,\n    height: 0\n  })\n\n  const updateInfo = ()=>{\n    setInfo({\n      ...info,\n      width: ref.current!.offsetWidth,\n      height: ref.current!.offsetHeight\n    })\n  }\n\n  useEffect(()=>{\n    const ro = new ResizeObserver(entries=>updateInfo())\n    ref.current && ro.observe(ref.current)\n    return ()=>ro.disconnect()\n  }, [ref])\n\n  return(\n    <div className='inspect' style={{\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      boxShadow: '0 0 0 1px orangered',\n      borderRadius: 2,\n      top: 0,\n      left: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // textShadow: '0 2px 5px rgba(0,0,0,.4)',\n      fontSize: 12,\n      transition: '.4s',\n      zIndex: 9999\n    }} ref={ref}>\n      <div className=\"inspect-info\" style={{\n        color: 'white',\n        background: 'red',\n        padding: 8,\n        borderRadius: 4,\n      }}>\n        {info.width} x {info.height}\n      </div>\n    </div>\n  )\n}\n\nexport default Inspect\n","import React, { HTMLAttributes, DetailedHTMLProps } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  colorStyle,\n  space,\n  layout,\n  ColorProps,\n  SpaceProps,\n  LayoutProps,\n  flex,\n  FlexProps,\n  flexbox,\n  FlexboxProps,\n  fontSize,\n  FontSizeProps,\n  fontFamily,\n  fontWeight,\n  fontStyle,\n  FontFamilyProps,\n  FontWeightProps,\n  FontStyleProps,\n  color,\n  BackgroundProps,\n  background,\n  borderRadius,\n  BorderRadiusProps,\n  boxShadow,\n  BoxShadowProps,\n  textShadow,\n  TextShadowProps,\n  textAlign,\n  TextAlignProps,\n  border,\n  BorderProps\n} from 'styled-system'\nimport { getComputedJustifyContent, getComputedAlignItems } from '../utils/flex'\nimport * as CSS from 'csstype'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport Inspect from './Inspect'\n\nexport interface BoxProps extends StyledBoxType, ColorProps {\n  center?: boolean\n  left?: boolean | string | number\n  right?: boolean | string | number\n  top?: boolean | string | number\n  bottom?: boolean | string | number\n  row?: boolean\n  rowBetween?: boolean\n  colBetween?: boolean\n  rowAround?: boolean\n  colAround?: boolean\n  rowEvenly?: boolean\n  colEvenly?: boolean\n  color?: string\n  pointer?: Boolean\n  textTransform?: CSS.TextTransformProperty\n  objectFit?: CSS.ObjectFitProperty\n  fit?: CSS.ObjectFitProperty\n  cover?: boolean\n  transition?: boolean | CSS.TransitionProperty\n  position?: CSS.PositionProperty\n  width?: CSS.WidthProperty<number>\n  fullWidth?: boolean\n  inspect?: boolean\n  alignX?: CSS.JustifyContentProperty | CSS.AlignItemsProperty\n  alignY?: CSS.JustifyContentProperty | CSS.AlignItemsProperty\n  stretch?: boolean\n  boxSizing?: CSS.BoxSizingProperty\n  borderBox?: boolean\n  contentBox?: boolean\n  userSelect?: CSS.UserSelectProperty\n  pointerEvents?: CSS.PointerEventsProperty\n}\n\nexport type BoxComponentProps = BoxProps & DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n\nconst Box: React.FC<BoxComponentProps> = React.forwardRef<HTMLDivElement, BoxComponentProps>(({\n  style,\n  color,\n  row,\n  center,\n  left,\n  right,\n  top,\n  bottom,\n  rowBetween,\n  rowAround,\n  rowEvenly,\n  colBetween,\n  colAround,\n  colEvenly,\n  pointer,\n  textTransform,\n  objectFit,\n  fit,\n  cover,\n  transition,\n  position,\n  width,\n  fullWidth,\n  inspect,\n  alignX,\n  alignY,\n  stretch,\n  boxSizing,\n  borderBox,\n  contentBox,\n  userSelect,\n  pointerEvents,\n  ...props\n}, ref) => {\n  const childrenPosition = {\n    center,\n    left: typeof left === 'boolean' && left ? left : undefined,\n    right: typeof right === 'boolean' && right ? right : undefined,\n    top: typeof top === 'boolean' && top ? top : undefined,\n    bottom: typeof bottom === 'boolean' && bottom ? bottom : undefined,\n    rowBetween,\n    rowAround,\n    rowEvenly,\n    colBetween,\n    colAround,\n    colEvenly\n  }\n  const flexDirection = row ? 'row' : 'column'\n  const justifyContent = getComputedJustifyContent({\n    childrenPosition,\n    flexDirection,\n    alignX,\n    alignY,\n    stretch\n  })\n  const alignItems = getComputedAlignItems({\n    childrenPosition,\n    flexDirection,\n    alignX,\n    alignY,\n    stretch\n  })\n  const cursor = pointer ? 'pointer' : undefined\n  const transitionStyle =\n    typeof transition === 'boolean'\n      ? '.4s'\n      : typeof transition === 'string'\n      ? transition\n      : undefined\n\n  const objectFitCSS = css`\n    img,\n    video,\n    audio {\n      width: 100%;\n      height: 100%;\n      object-fit: ${cover ? 'cover' : fit || objectFit};\n    }\n  `\n\n  return (\n    <StyledBox\n      color={color}\n      flexDirection={flexDirection}\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      style={{\n        cursor,\n        textTransform,\n        transition: transitionStyle,\n        position,\n        left: typeof left !== 'boolean' ? left : undefined,\n        right: typeof right !== 'boolean' ? right : undefined,\n        top: typeof top !== 'boolean' ? top : undefined,\n        bottom: typeof bottom !== 'boolean' ? bottom : undefined,\n        width: fullWidth ? '100%' : width,\n        boxSizing: borderBox&&'border-box' || contentBox&&'content-box' || boxSizing,\n        userSelect,\n        pointerEvents,\n        ...style,\n      }}\n      css={css`\n        ${cover || fit || objectFit ? objectFitCSS : null};\n        ${cover || fit || (objectFit && props.borderRadius)\n          ? `overflow: hidden`\n          : null};\n        position: relative;\n      `}\n      ref={ref}\n      {...props}>\n\n      {inspect && <Inspect />}\n      {props.children}\n\n    </StyledBox>\n  )\n})\n\nBox.defaultProps = {\n  display: 'flex'\n}\n\n// Props definition for Box\ntype StyledBoxType = SpaceProps &\n  LayoutProps &\n  FlexProps &\n  FlexboxProps &\n  FontSizeProps &\n  FontFamilyProps &\n  FontWeightProps &\n  FontStyleProps &\n  BackgroundProps &\n  BorderRadiusProps &\n  BoxShadowProps &\n  TextShadowProps &\n  TextAlignProps &\n  BorderProps\n\n// Use styled-theme to decorate Box\nconst StyledBox = styled.div<StyledBoxType | ColorProps>`\n  ${color}\n  ${layout}\n  ${colorStyle}\n  ${space}\n  ${flex}\n  ${flexbox}\n  ${fontSize}\n  ${fontFamily}\n  ${fontWeight}\n  ${fontStyle}\n  ${background}\n  ${borderRadius}\n  ${boxShadow}\n  ${textShadow}\n  ${textAlign}\n  ${border}\n`\n\nexport default Box\n","import React, { ImgHTMLAttributes, DetailedHTMLProps } from 'react'\nimport * as CSS from 'csstype'\n\nexport interface ImageProps extends DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n  src?: 'random' | (string&{})\n  objectFit?: CSS.ObjectFitProperty\n  fit?: CSS.ObjectFitProperty,\n  cover?: boolean,\n  width?: CSS.WidthProperty<number>\n  height?: CSS.HeightProperty<number>\n  minWidth?: CSS.MinWidthProperty<number>\n  minHeight?: CSS.MinHeightProperty<number>\n  maxWidth?: CSS.MaxWidthProperty<number>\n  maxHeight?: CSS.MaxHeightProperty<number>\n  display?: 'inline' | 'block' | 'inline-block' | 'none' | 'unset' | 'initial'\n  borderRadius?: CSS.BorderRadiusProperty<number>\n}\n\nconst Image: React.FC<ImageProps> = ({\n  src,\n  alt,\n  objectFit,\n  fit,\n  cover,\n  height,\n  width,\n  minWidth,\n  minHeight,\n  maxWidth,\n  maxHeight,\n  display,\n  borderRadius,\n  ...props\n}) => {\n  const objectFitStyle = ():any => {\n    if(cover) return 'cover'\n    if(fit || objectFit) return fit || objectFit\n  }\n\n  const randomSeed:(a:number,b:number)=>number = (a,b)=>{\n    return Math.round(Math.random()*(b-a) + a)\n  }\n\n  return (\n    <img\n      src={src ? src === 'random' ? `https://picsum.photos/seed/${randomSeed(0,3000)}/300` : src : `https://picsum.photos/seed/${randomSeed(0,3000)}/300`}\n      alt={alt}\n      style={{\n        objectFit: objectFitStyle(),\n        width,\n        height,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        display,\n        borderRadius\n      }}\n      {...props}\n    />\n  )\n}\n\n// const StyledImage = styled.img`\n\n// `\n\nexport default Image\n","import React, { ImgHTMLAttributes } from 'react'\nimport Box, {BoxComponentProps, BoxProps} from './Box'\nimport Image, {ImageProps} from './Image'\n\nexport interface AvatarProps extends BoxComponentProps {\n  /**Image source url path */\n  src?: 'random' | (string&{})\n  /**Generate random pictures from https://picsum.photos/ for quick demonstration*/\n  random?: boolean\n}\n\nconst Avatar: React.FC<AvatarProps> = ({src='random', children, random,  ...props}) => {\n\n  return(\n    <Box center={children?true:false} {...props}>\n      {children || <Image src={src} />}\n    </Box>\n  )\n}\n\nAvatar.defaultProps = {\n  borderRadius: '50%',\n  cover: true,\n  size: 34,\n  backgroundColor: 'whitesmoke'\n}\n\nexport default Avatar\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useCopyToClipboard } from 'react-use'\n\n// Props\ninterface CopyProps {\n  /**Scope of copy */\n  type?: 'innerText' | 'innerHTML' | 'outerHTML'\n  /**Callback function with copiedStirng param exported */\n  onCopyTriggered?: (copiedString: string)=>void\n}\n\nconst Copy: React.FC<CopyProps> = ({children, type='innerText', onCopyTriggered, ...props}) => {\n  // Hooks\n  const [copied, copyToClipboard] = useCopyToClipboard()\n  const [copyString, setCopyString] = useState<string>('')\n\n  // Refs\n  const copy = useRef<HTMLDivElement>(null)\n\n  // Update copystring\n  useEffect(()=>{\n    const copyDOM = copy.current\n    copyDOM && setCopyString(type==='innerText' ? copyDOM?.innerText : type==='innerHTML' ? copyDOM?.innerHTML : type==='outerHTML' ? copyDOM?.outerHTML : '')\n  }, [copyString])\n\n  // Click to copy\n  const handleClick = ()=>{\n    if(copyString) copyToClipboard(copyString)\n  }\n\n  // onCopyTriggered callback\n  useEffect(()=>{\n    copied.value && onCopyTriggered && onCopyTriggered(copyString)\n  }, [copied])\n\n  return(\n    <div ref={copy} onClick={handleClick} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport default Copy\n","import React, { useLayoutEffect } from 'react'\n\nexport interface MetaProps {\n  title: string\n  favicon: string\n}\n\nconst Meta: React.FC<MetaProps> = ({\n  title,\n  favicon\n}) => {\n  useLayoutEffect(()=>{\n    document.title = title\n    document.querySelector('link[rel=icon]')!.setAttribute('href', favicon)\n  }, [])\n\n  return(<></>)\n}\n\nexport default Meta\n"],"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","this","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","Inspect","ref","useRef","useState","info","setInfo","useEffect","ro","current","offsetWidth","offsetHeight","jsx","className","style","boxShadow","borderRadius","display","justifyContent","alignItems","fontSize","transition","zIndex","color","background","padding","Box","React","forwardRef","row","center","rowBetween","rowAround","rowEvenly","colBetween","colAround","colEvenly","pointer","textTransform","objectFit","fit","cover","fullWidth","inspect","alignX","alignY","stretch","borderBox","contentBox","userSelect","pointerEvents","childrenPosition","undefined","flexDirection","direction","getComputedJustifyContent","getComputedAlignItems","cursor","transitionStyle","objectFitCSS","css","StyledBox","children","defaultProps","styled","div","layout","colorStyle","space","flex","flexbox","fontFamily","fontWeight","fontStyle","textShadow","textAlign","border","Image","src","alt","minWidth","minHeight","maxWidth","maxHeight","randomSeed","a","b","random","Avatar","backgroundColor","type","onCopyTriggered","useCopyToClipboard","copied","copyToClipboard","copyString","setCopyString","copy","copyDOM","innerText","innerHTML","outerHTML","onClick","title","favicon","useLayoutEffect","querySelector","setAttribute"],"mappings":"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"}